{
  "name": "rio",
  "description": "Integration with Rserve, a TCP/IP server for R framework",
  "version": "1.2.0",
  "main": "index",
  "repository": {
    "type": "git",
    "url": "http://github.com/albertosantini/node-rio"
  },
  "keywords": [
    "Rserve",
    "R framework"
  ],
  "author": {
    "name": "Alberto Santini"
  },
  "license": "MIT",
  "engines": {
    "node": "~0.10.21"
  },
  "dependencies": {
    "binary": "~0.3.0",
    "hexy": "~0.2.5"
  },
  "scripts": {
    "test": "grunt"
  },
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-cli": "~0.1.11",
    "grunt-contrib-jshint": "~0.7.1",
    "grunt-vows-runner": "~0.6.0",
    "vows": "~0.7.0"
  },
  "readme": "RIO\r\n======\r\n[![Build Status](https://travis-ci.org/albertosantini/node-rio.png)](https://travis-ci.org/albertosantini/node-rio)\r\n[![NPM version](https://badge.fury.io/js/rio.png)](http://badge.fury.io/js/rio)\r\n[![NGN Dependencies](https://david-dm.org/albertosantini/node-rio.png)](https://david-dm.org/albertosantini/node-rio)\r\n\r\nRIO, R Input Output, connects an app to [Rserve](http://www.rforge.net/Rserve/),\r\na TCP/IP server which allows other programs to use facilities of [R](http://www.r-project.org).\r\n\r\nIt supports double, double array, string, string array boolean, boolean array\r\nobjects and raw vector (images or files).\r\n\r\nIt supports also the plain text authentication, if Rserve is configured for that\r\ncapability.\r\n\r\nThe main goal is to pass a string containing a script call using a JSON object\r\nas parameter. Then, inside the script, using RJSONIO package, deserializing\r\nthe JSON object, calling a method, serializing the response and returning to\r\nNodeJS.\r\n\r\nExample\r\n========\r\n\r\n    var rio = require('rio');\r\n\r\n    rio.evaluate(\"pi / 2 * 2\");\r\n    rio.evaluate('c(1, 2)');\r\n    rio.evaluate(\"as.character('Hello World')\");\r\n    rio.evaluate('c(\"a\", \"b\")');\r\n    rio.evaluate('Sys.sleep(5); 11')\r\n\r\nSee `examples` directory.\r\n\r\n- `ex1`: Getting started with `evaluate` api.\r\n- `ex2`: How to evaluate a script, to call a function passing params with\r\n`sourceAndEval`.\r\n- `ex3`: How to call `sourceAndEval` with a config object including connection\r\ndetails.\r\n- `ex4`: An example with utf-8 chars.\r\n- `ex5`: How to retrieve a plot.\r\n\r\nInstallation\r\n============\r\n\r\n[![NPM](https://nodei.co/npm/rio.png?downloads=true)](https://nodei.co/npm/rio/)\r\n[![NPM](https://nodei.co/npm-dl/rio.png)](https://nodei.co/npm/rio/)\r\n\r\nTo install with [npm](http://github.com/isaacs/npm):\r\n\r\n    npm install rio\r\n\r\nTested with node 0.10.21 and Rserve 1.7.3 (on Windows 7) with R 3.0.2.\r\n\r\nDon't forget to start [Rserve](http://cran.r-project.org/web/packages/Rserve/).\r\nFor instance, from R console, after installing the package Rserve:\r\n\r\n    require('Rserve')\r\n    Rserve()\r\n\r\nTo shutdown the server from R console:\r\n\r\n    require('RSclient')\r\n    c <- RSconnect()\r\n    RSshutdown(c)\r\n\r\nMethods\r\n=======\r\n\r\nevaluate(command, options)\r\n--------------------------\r\n\r\nEvaluate a command, connecting to Rserve, executing the command and then\r\ndisconnecting.\r\n\r\nThe defaults for the options parameter:\r\n\r\n    options = {\r\n        callback: function (err, res) {\r\n            if (err) {\r\n                util.puts(res);\r\n            } else {\r\n                util.puts(\"Rserve call failed\");\r\n            }\r\n        },\r\n        host = \"127.0.0.1\",\r\n        port = 6311,\r\n        path = undefined,\r\n        user = \"anon\",\r\n        password = \"anon\"\r\n    }\r\n\r\nEither define `path`, the path of a Unix socket, or `host`/`port`.\r\n\r\n\r\nsourceAndEval(filename, options)\r\n-------------\r\n\r\nIt loads the content of a R file and calls the `evaluate` method, merging,\r\nfinally, the options parameter:\r\n\r\n    options = {\r\n        entryPoint: \"main\", // entryPoint is called\r\n        data: { foo: \"bar\" } // data is stringified and passed to entryPoint\r\n    }\r\n\r\nbufferAndEval(buffer, options)\r\n-------------\r\n\r\nIt is an helper method to call `evaluate`, adding to the buffer string, the call\r\nof the entry point. Options are the same as for `evaluate`.\r\n\r\nshutdown(options)\r\n-----------------\r\n\r\nSends the `CMD_shutdown` command to the Rserve server. Options are the same as\r\nfor `evaluate`.\r\n\r\nenableDebug(isDebug)\r\n-----------\r\n\r\nIt enables debugging mode, printing the packet and logging messages.\r\n\r\nenableRecordMode(isRecordMode, options)\r\n----------------\r\n\r\nIt enables record mode, dumping the incoming data to a file specified in the\r\noptions.\r\n\r\n    options = {\r\n        fileName: \"node-rio-dump.bin\"\r\n    }\r\n\r\nenablePlaybackMode(isPlaybackMode, options)\r\n------------------\r\n\r\nIt enables playback mode, reading a dump file instead connecting to the server.\r\n\r\n    options = {\r\n        fileName: \"node-rio-dump.bin\"\r\n    }\r\n\r\nContributors\r\n============\r\n\r\n```\r\n project  : node-rio\r\n repo age : 2 years, 3 months\r\n active   : 49 days\r\n commits  : 118\r\n files    : 35\r\n authors  :\r\n   113  icebox                  95.8%\r\n     2  Anand Patil             1.7%\r\n     2  albertosantini          1.7%\r\n     1  Farrin Reid             0.8%\r\n```\r\n",
  "readmeFilename": "README.markdown",
  "bugs": {
    "url": "https://github.com/albertosantini/node-rio/issues"
  },
  "homepage": "https://github.com/albertosantini/node-rio",
  "_id": "rio@1.2.0",
  "dist": {
    "shasum": "b31e75740f1ddbc2c40402292e72fb2148d9c7dc"
  },
  "_from": "rio@",
  "_resolved": "https://registry.npmjs.org/rio/-/rio-1.2.0.tgz"
}
